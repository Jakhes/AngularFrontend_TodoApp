// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

@use "sass:color";
@use "sass:map";
@use "sass:math";

/// Estimate a hue using the given previous and next hues.
@function _estimate-hue($hues, $hue, $prev-hue, $next-hue) {
  $weight: math.div($next-hue - $hue, $next-hue - $prev-hue) * 100%;
  @return color.mix(
    map.get($hues, $prev-hue),
    map.get($hues, $next-hue),
    $weight
  );
}
@include mat.core();
// TODO(mmalerba): Remove this and add correct values for these hues.
/// The Material Design spec references some neutral hues that are not generated by
/// https://m3.material.io/theme-builder. For now we use this function to estimate the missing hues
/// by blending the nearest hues that are generated.
/// Note: when updating, the corresponding logic in the theme generation schematic should be
/// updated as well. See `src/material/schematics/ng-generate/m3-theme/index.ts#patchMissingHues`
@function _patch-missing-hues($palette) {
  $neutral: map.get($palette, neutral);
  $palette: map.set($palette, neutral, 4, _estimate-hue($neutral, 4, 0, 10));
  $palette: map.set($palette, neutral, 6, _estimate-hue($neutral, 6, 0, 10));
  $palette: map.set($palette, neutral, 12, _estimate-hue($neutral, 12, 10, 20));
  $palette: map.set($palette, neutral, 17, _estimate-hue($neutral, 17, 10, 20));
  $palette: map.set($palette, neutral, 22, _estimate-hue($neutral, 22, 20, 25));
  $palette: map.set($palette, neutral, 24, _estimate-hue($neutral, 24, 20, 25));
  $palette: map.set($palette, neutral, 87, _estimate-hue($neutral, 87, 80, 90));
  $palette: map.set($palette, neutral, 92, _estimate-hue($neutral, 92, 90, 95));
  $palette: map.set($palette, neutral, 94, _estimate-hue($neutral, 94, 90, 95));
  $palette: map.set($palette, neutral, 96, _estimate-hue($neutral, 96, 95, 98));
  @return $palette;
}

/// Adds the error colors to the given palette.
@function _patch-error-palette($palette) {
  @return map.merge(
    $palette,
    (
      error: (
        0: #000000,
        10: #410002,
        20: #690005,
        25: #7e0007,
        30: #93000a,
        35: #a80710,
        40: #ba1a1a,
        50: #de3730,
        60: #ff5449,
        70: #ff897d,
        80: #ffb4ab,
        90: #ffdad6,
        95: #ffedea,
        98: #fff8f7,
        99: #fffbff,
        100: #ffffff,
      ),
    )
  );
}

@function _apply-patches($palette) {
  @return _patch-missing-hues(_patch-error-palette($palette));
}

$better-palettes: _apply-patches(
  (
    0: #000000,
    10: #321300,
    20: #512300,
    25: #622c00,
    30: #743500,
    35: #863e00,
    40: #984800,
    50: #be5b00,
    60: #e47009,
    70: #ff8d3c,
    80: #ffb689,
    90: #ffdbc8,
    95: #ffede5,
    98: #fff8f5,
    99: #fffbff,
    100: #ffffff,
    secondary: (
      0: #000000,
      10: #00201f,
      20: #0b3636,
      25: #194141,
      30: #264d4c,
      35: #325958,
      40: #3e6564,
      50: #577e7d,
      60: #709897,
      70: #8ab3b1,
      80: #a5cecd,
      90: #c1eae9,
      95: #cff9f7,
      98: #e3fffd,
      99: #f1fffe,
      100: #ffffff,
    ),
    neutral: (
      0: #000000,
      10: #191c1c,
      20: #2d3131,
      25: #383c3c,
      30: #444747,
      35: #4f5353,
      40: #5b5f5f,
      50: #747877,
      60: #8e9191,
      70: #a9acab,
      80: #c4c7c6,
      90: #e0e3e2,
      95: #eff1f0,
      98: #f7faf9,
      99: #fafdfc,
      100: #ffffff,
    ),
    neutral-variant: (
      0: #000000,
      10: #141d1d,
      20: #293232,
      25: #343d3d,
      30: #3f4948,
      35: #4a5454,
      40: #566060,
      50: #6f7979,
      60: #889392,
      70: #a3adad,
      80: #bec9c8,
      90: #dae5e4,
      95: #e9f3f2,
      98: #f1fbfa,
      99: #f4fefd,
      100: #ffffff,
    ),
  )
);

// Define the theme object.
$AngularFrontend_TodoApp-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: $better-palettes,
      tertiary: $better-palettes,
    ),
    density: (
      scale: 0,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($AngularFrontend_TodoApp-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($AngularFrontend_TodoApp-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($AngularFrontend_TodoApp-theme);
:root {
  --high_priority: #d6542c;
  --high_priority_shade: #684d4480;
  --mid_priority: #e2a83c;
  --mid_priority_shade: #8b7d6b7c;
  --low_priority: #125ca1;
  --low_priority_shade: #31496180;

  --no_priority: #dadada;
  --no_priority_shade: #b9b9b963;
  --no_priority_light_shade: #b9b9b9ab;

  --deactivated: #b9b9b9;
  --user: #273e536c;

  --mat-dialog-container-max-width: 100vw;
}

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
  color: var(--no_priority);
  background-color: #383d4b;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.P1 .mdc-checkbox__background {
  border-color: var(--high_priority) !important;
}

.P2 .mdc-checkbox__background {
  border-color: var(--mid_priority) !important;
}

.P3 .mdc-checkbox__background {
  border-color: var(--low_priority) !important;
}

.P4 .mdc-checkbox__background {
  border-color: var(--no_priority) !important;
}

.priority-element-P1 {
  color: var(--high_priority) !important;
}

.priority-element-P2 {
  color: var(--mid_priority) !important;
}

.priority-element-P3 {
  color: var(--low_priority) !important;
}

.priority-element-P4 {
  color: var(--no_priority) !important;
}

.mat-mdc-dialog-surface {
  border-style: solid;
  border-width: 1px;
  border-color: var(--no_priority_shade) !important;
}

.mat-mdc-menu-panel {
  padding: 4px 8px;
  border-style: solid;
  border-width: 1px;
  border-color: var(--no_priority_shade) !important;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
